//update user information fucntion
const updateUser = asyncHandler(async (req, res) => {
  const { username,address,gender  } = req.body;
  // console.log("profile picture",profilePicture)
    const id = req.user.id;
 
  const userDetail = await User.findById(id);

  /* Check for user */
  if (!req.user) {
    return res.status(404).json({
      status: "FAILED",
        message: "user not found",    
   })
  }

  let filesArray = [];
  if (profilePicture !== undefined && profilePicture !== []) {
    const file = {
      fileName: profilePicture.filename,
      filePath: profilePicture.path,
      fileType: profilePicture.mimetype,
      fileSize: fileSizeFormatter(profilePicture.size,2),
    };
    filesArray.push(file);


    if (userDetail.profilePicture[0] !== "") {
         //for Image File to when when we do update picture
      fs.unlink(path.join(mainPath, userDetail.profilePicture[0].filePath), (err) => {
          if (err) {
          return  console.log("error occur", err);
          }
          console.log("file is deleted successully");
        });     
    }
    //update user
  await User.updateOne(
    { _id: id },
    {
      $set: {
        username: username,
        login: true,
        gender: gender,
        address: address,
        profilePicture: filesArray,
      },
    }
  );
  } else {
     //update user
  await User.updateOne(
    { _id: id },
    {
      $set: {
        username: username,
        login: true,
        gender: gender,
        address: address,
      },
    }
  );
  }
  const updatedData = await User.findById(id);

  res.status(200).json({
    _id: id,
    username: updatedData.username,
    email: updatedData.email,
    address: updatedData.address,
    gender: updatedData.gender,
    profilePicture: updatedData.profilePicture,
    login: updatedData.login,
  });
});
