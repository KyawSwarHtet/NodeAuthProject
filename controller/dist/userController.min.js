"use strict";var jwt=require("jsonwebtoken"),fs=require("fs"),asyncHandler=require("express-async-handler"),mainPath=require("./baseFilepath"),User=require("../model/userModel"),bcrypt=require("bcryptjs"),path=require("path"),getAllUser=function(e,r){r.render("user/register",{pageTitle:"Register",path:"/register"})},registerUser=asyncHandler(function(r,t){var s,n,a,i;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:if(s=r.body,n=s.username,a=s.email,i=s.password,n=n.trim(),a=a.trim(),i=i.trim(),n&&a&&i){e.next=6;break}return e.abrupt("return",t.status(404).json({status:"FAILED",message:"Empty input Fields!"}));case 6:if(/^[a-zA-Z ]*$/.test(n)){e.next=8;break}return e.abrupt("return",t.status(400).json({status:"FAILED",message:"Invalid name entered"}));case 8:if(/^[\w-\.]+@([\w-]+\.)+[\w-]{2,4}$/.test(a)){e.next=10;break}return e.abrupt("return",t.status(400).json({status:"FAILED",message:"Invalid email entered"}));case 10:if(i.length<8)return e.abrupt("return",t.status(400).json({status:"FAILED",message:"Password is too short!"}));e.next=12;break;case 12:return e.next=14,regeneratorRuntime.awrap(User.find({email:a}).then(function(e){if(e.length)return t.status(400).json({status:"FAILED",message:"User with the provided email already exists"});bcrypt.hash(i,10).then(function(e){new User({username:n,email:a,password:e}).save().then(function(e){console.log("user  post is success"),t.status(201).json(e)}).catch(function(e){t.status(400).json({status:"FAILED",message:"An error occurred while saving user account!"})})}).catch(function(e){t.status(400).json({status:"FAILED",message:"An error occurred while hashing password!"})})}).catch(function(e){t.status(400).json({status:"FAILED",message:"An error occured while checking for existing user!"})}));case 14:case"end":return e.stop()}})}),loginUser=asyncHandler(function(r,t){var s,n,a,i;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:if(s=r.body,n=s.email,a=s.password,n=n.trim(),a=a.trim(),""==n||""==a)return e.abrupt("return",t.status(400).json({status:"FAILED",message:"Empty credentials supplied"}));e.next=5;break;case 5:return e.next=7,regeneratorRuntime.awrap(User.findOne({email:n}));case 7:if(i=e.sent,e.t0=i,e.t0)return e.next=12,regeneratorRuntime.awrap(bcrypt.compare(a,i.password));e.next=13;break;case 12:e.t0=e.sent;case 13:if(!e.t0){e.next=17;break}User.updateOne({_id:i.id},{login:!0}).then(function(){t.status(201).json({_id:i.id,username:i.username,email:i.email,login:!0,token:generateToken(i._id)})}).catch(function(e){t.status(400).json({status:"FAILED",message:"An error occur while updating login data update"})}),e.next=18;break;case 17:t.status(400).json({status:"FAILED",message:"Email, Password is something wrong"});case 18:case"end":return e.stop()}})}),generateToken=function(e){return jwt.sign({id:e},"".concat(process.env.JWT_SECRET),{expiresIn:"30d"})},updateUser=asyncHandler(function(r,t){var s,n,a,i,u,o,c,l,d,f;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return s=r.body,n=s.username,a=s.address,i=s.gender,u=r.file,console.log("profile picture",u),o=r.user.id,e.next=6,regeneratorRuntime.awrap(User.findById(o));case 6:if(c=e.sent,r.user){e.next=9;break}return e.abrupt("return",t.status(404).json({status:"FAILED",message:"user not found"}));case 9:if(l=[],void 0!==u&&u!==[])return d={fileName:u.filename,filePath:u.path,fileType:u.mimetype,fileSize:fileSizeFormatter(u.size,2)},l.push(d),""!==c.profilePicture[0]&&fs.unlink(path.join(mainPath,c.profilePicture[0].filePath),function(e){if(e)return console.log("error occur",e);console.log("file is deleted successully")}),e.next=16,regeneratorRuntime.awrap(User.updateOne({_id:o},{$set:{username:n,login:!0,gender:i,address:a,profilePicture:l}}));e.next=18;break;case 16:e.next=20;break;case 18:return e.next=20,regeneratorRuntime.awrap(User.updateOne({_id:o},{$set:{username:n,login:!0,gender:i,address:a}}));case 20:return e.next=22,regeneratorRuntime.awrap(User.findById(o));case 22:f=e.sent,t.status(200).json({_id:o,username:f.username,email:f.email,address:f.address,gender:f.gender,profilePicture:f.profilePicture,login:f.login});case 24:case"end":return e.stop()}})}),fileSizeFormatter=function(e,r){if(0===e)return"0 byte";var t=r||2,s=Math.floor(Math.log(e)/Math.log(1e3));return parseFloat((e/Math.pow(1e3,s)).toFixed(t))+"-"+["Bytes","KB","MB","GB","TB","PB","EB","YB","ZB"][s]},deleteUserAccount=function(r,t){var s,n;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return s=r.user.id,e.next=3,regeneratorRuntime.awrap(User.findById(s));case 3:if(n=e.sent,r.user){e.next=6;break}return e.abrupt("return",t.status(404).json({status:"FAILED",message:"user not found"}));case 6:return""===n.profilePicture[0]||0===n.profilePicture.length?console.log("file is empty file"):fs.unlink(path.join(mainPath,n.profilePicture[0].filePath),function(e){if(e)return console.log("error occur",e);console.log("file is deleted successully")}),e.next=9,regeneratorRuntime.awrap(User.findByIdAndRemove(s).exec());case 9:t.status(200).json("User Account Deleted Successfully");case 10:case"end":return e.stop()}})};module.exports={getAllUser:getAllUser,registerUser:registerUser,loginUser:loginUser,updateUser:updateUser,deleteUserAccount:deleteUserAccount};
//# sourceMappingURL=userController.min.js.map
